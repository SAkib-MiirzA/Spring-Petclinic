# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI/CD with maven

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Make Maven Wrapper executable
        run: chmod +x ./mvnw
        
      - name: Build with Maven
        run: ./mvnw -B package -Dmaven.test.failure.ignore=true

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Verify JAR file
        run: |
          echo "Verifying JAR file presence..."
          ls -al /home/sakib/spring-petclinic/target/
          if [ ! -f /home/sakib/spring-petclinic/target/spring-petclinic-3.3.0-SNAPSHOT.jar ]; then
            echo "JAR file not found in target directory!"
            exit 1
          fi

      - name: Setup SSH
        run: |
          echo "Setting up SSH..."
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/known_hosts || true

      - name: Deploy application
        env:
          DEPLOY_SERVER: '103.151.111.235'
          DEPLOY_PORT: '8080'
          DEPLOY_USER: 'sakib'
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "Deploying application to $DEPLOY_SERVER"
          scp -i ~/.ssh/id_rsa /home/sakib/spring-petclinic/target/spring-petclinic-3.3.0-SNAPSHOT.jar $DEPLOY_USER@$DEPLOY_SERVER:/home/sakib/spring-petclinic/
          ssh -i ~/.ssh/id_rsa $DEPLOY_USER@$DEPLOY_SERVER "nohup java -jar /home/sakib/spring-petclinic/spring-petclinic-3.3.0-SNAPSHOT.jar > /dev/null 2>&1 &"
          rm -f ~/.ssh/id_rsa

      - name: Wait for application to start
        run: |
          echo "Waiting for application to start..."
          for i in $(seq 1 30); do
            if curl -s http://103.151.111.235:8080 > /dev/null; then
              echo "Application is up!"
              break
            else
              echo "Application is not up yet, retrying in 10 seconds..."
              sleep 10
            fi
          done

  test:
    runs-on: self-hosted
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Make Maven Wrapper executable
        run: chmod +x ./mvnw 

      - name: Run tests
        run: ./mvnw test -Dmaven.test.failure.ignore=true
